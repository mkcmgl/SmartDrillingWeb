/* eslint-disable */
import {__decorate as t} from 'tslib';import {Gi,qi,Mi,_s,Ci} from '@int/impl/geotoolkit.base.js';function Ast(t,i){return encodeURI(t+"?json=")+encodeURIComponent(JSON.stringify({filePath:i}))}var nst=Ci(function(){let i=class t{constructor(t){this.options=qi(t,{server:"",metaservice:"json/faultdata",dataservice:"json/faultquery",file:""},!0)}Brs_(t,i){const s=new Mi.XMLHttpRequest;s.onreadystatechange=()=>{if(s.readyState===s.DONE)if(s.status===200&&s.response!=null){const i=JSON.parse(s.response);t(i)}else{Gi("Failed to download:"+s.status+" "+s.statusText);i(s)}};s.open("GET",Ast(this.options["server"]+this.options["metaservice"],this.options["file"]),!0);s.send();return s}wrs_(t,i){const s=new Mi.XMLHttpRequest;s.onreadystatechange=()=>{if(s.readyState===s.DONE)if(s.status===200&&s.response!=null)t(JSON.parse(s.response));else{Gi("Failed to download:"+s.status+" "+s.statusText);i(s)}};s.open("GET",Ast(this.options["server"]+this.options["dataservice"],this.options["file"]),!0);s.send();return s}};i=t([_s("geotoolkit.intgeo.RemoteFaultPillarDataSource")],i);return i}(),2,"eyJwcm90b3R5cGUiOnsicyI6MCwiYyI6eyJyZWFkTWV0YWRhdGEiOiJCcnNfIiwicmVhZERhdGEiOiJ3cnNfIn19LCJnZXRDbGFzc05hbWUiOiJEXyJ9");function hst(t,i){return encodeURI(t+"?json=")+encodeURIComponent(JSON.stringify({filePath:i}))}var rst=Ci(function(){let i=class t{constructor(t){this.options=qi(t,{server:"",metaservice:"json/gridsurfacestream",dataservice:"json/gridsurfacestreampts",file:""},!0)}Brs_(t,i){const s=new Mi.XMLHttpRequest;s.onreadystatechange=()=>{if(s.readyState===s.DONE)if(s.status===200&&s.response!=null){const i=JSON.parse(s.response);t(i)}else{Gi("Failed to download:"+s.status+" "+s.statusText);i(s)}};s.open("GET",hst(this.options["server"]+this.options["metaservice"],this.options["file"]),!0);s.send();return s}Qrs_(t,i){const s=new Mi.XMLHttpRequest;s.onreadystatechange=()=>{if(s.readyState===s.DONE)if(s.status===200&&s.response!=null)t(new Float32Array(s.response));else{Gi("Failed to download:"+s.status+" "+s.statusText);i(s)}};s.open("GET",hst(this.options["server"]+this.options["dataservice"],this.options["file"]),!0);s.responseType="arraybuffer";s.send();return s}};i=t([_s("geotoolkit.intgeo.RemoteGridSurfaceDataSource")],i);return i}(),2,"eyJwcm90b3R5cGUiOnsicyI6MCwiYyI6eyJyZWFkTWV0YWRhdGEiOiJCcnNfIiwicmVhZERhdGFBcnJheSI6IlFyc18ifX0sImdldENsYXNzTmFtZSI6IkRfIn0g");function ost(t,i,s){return s==null?encodeURI(t+"?json=")+encodeURIComponent(JSON.stringify({filePath:i})):encodeURI(t+"?json=")+encodeURIComponent(JSON.stringify({filePath:i,logCurve:s}))}var lst=Ci(function(){let i=class t{constructor(t){this.options=qi(t,{server:"",metaservice:"json/welldata",dataservice:"json/logcurvedata",file:""},!0)}Brs_(t,i){const s=new Mi.XMLHttpRequest;s.onreadystatechange=function(){if(s.readyState===s.DONE)if(s.status===200&&s.response!=null){const i=JSON.parse(s.response);t(i)}else{Gi("Failed to download:"+s.status+" "+s.statusText);i(s)}};s.open("GET",ost(this.options["server"]+this.options["metaservice"],this.options["file"]),!0);s.send();return s}Ers_(t,i,s){const e=new Mi.XMLHttpRequest;e.onreadystatechange=()=>{if(e.readyState===e.DONE)if(e.status===200&&e.response!=null){const t=JSON.parse(e.response);i(t)}else{Gi("Failed to download:"+e.status+" "+e.statusText);s(e)}};e.open("GET",ost(this.options["server"]+this.options["dataservice"],this.options["file"],t),!0);e.send();return e}};i=t([_s("geotoolkit.intgeo.RemoteWelllogDataSource")],i);return i}(),2,"eyJwcm90b3R5cGUiOnsicyI6MCwiYyI6eyJyZWFkTWV0YWRhdGEiOiJCcnNfIiwicmVhZEN1cnZlIjoiRXJzXyJ9fSwiZ2V0Q2xhc3NOYW1lIjoiRF8ifSAg");export {nst,rst,lst};